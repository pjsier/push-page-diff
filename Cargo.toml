[package]
name = "push-page-diff"
version = "0.1.0"
authors = ["Pat Sier <pjsier@gmail.com>"]
edition = "2018"

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["console_error_panic_hook"]

[dependencies]
cfg-if = "0.1.2"
wasm-bindgen = { version = "0.2.69", features = ["serde-serialize"] }
wasm-bindgen-futures = "0.4.19"
js-sys = "0.3.46"
futures = "0.3"
scraper = "0.12"
serde = "1"
serde_derive = "1"
serde_json = "1"
jwt-simple = "0.2"
base64 = "0.13"
rand = "=0.7.3"
hkdf = "=0.10.0"
sha2 = "0.9"
aes-gcm = { version = "0.8.0", features = ["aes"] }
p256 = {version = "0.7", features =["ecdh"]}
# Required to pin to resolve dependency loop in jwt-simple
ed25519-compact = "=0.1.6"
# Feature needed to fix compilation for wasm-unknown-unknown
coarsetime = "=0.1.17"
getrandom = {version = "0.1", features = ["wasm-bindgen"]}
ece = { version = "1.2.1", default-features = false, features = ["serializable-keys"] }

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.1", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
wee_alloc = { version = "0.4.2", optional = true }

[dependencies.web-sys]
version = "0.3.4"
features = [
  'Headers',
  'Request',
  'RequestInit',
  'Response',
  'Window',
  'ServiceWorkerGlobalScope',
  'Url'
]

[dev-dependencies]
wasm-bindgen-test = "0.3"

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"
